import React, { useState, useEffect } from 'react'
import BookItem from './BookItem'

const LOCAL_KEY = 'book_list'

const initialBooks = [
  { id: 1, title: "ƒê·∫Øc nh√¢n t√¢m", author: "Dale Carnegie", genre: "K·ªπ nƒÉng s·ªëng", year: 1936 },
  { id: 2, title: "D·∫ø m√®n phi√™u l∆∞u k√Ω", author: "T√¥ Ho√†i", genre: "VƒÉn h·ªçc thi·∫øu nhi", year: 1941 },
  { id: 3, title: "L√£o H·∫°c", author: "Nam Cao", genre: "VƒÉn h·ªçc hi·ªán th·ª±c", year: 1943 },
  { id: 4, title: "Sapiens", author: "Yuval Noah Harari", genre: "Khoa h·ªçc", year: 2011 },
  { id: 5, title: "T√¢m l√Ω h·ªçc t·ªôi ph·∫°m", author: "David Canter", genre: "T√¢m l√Ω", year: 2008 },
]

const loadBooksFromLocalStorage = () => {
  const data = localStorage.getItem(LOCAL_KEY)
  return data ? JSON.parse(data) : []
}

const BookList = () => {
  const [books, setBooks] = useState(() => {
    const localData = loadBooksFromLocalStorage()
    return localData.length > 0 ? localData : initialBooks
  })

  const [newBook, setNewBook] = useState({ title: '', author: '', genre: '', year: '' })
  const [searchText, setSearchText] = useState('')
  const [selectedGenre, setSelectedGenre] = useState("T·∫•t c·∫£")

  useEffect(() => {
    localStorage.setItem(LOCAL_KEY, JSON.stringify(books))
  }, [books])

  const handleChange = (e) => {
    const { name, value } = e.target
    setNewBook(prev => ({ ...prev, [name]: value }))
  }

  const handleAddBook = () => {
    if (!newBook.title || !newBook.author || !newBook.genre || !newBook.year) {
      alert("Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin!")
      return
    }
    const newId = books.length > 0 ? books[books.length - 1].id + 1 : 1
    const bookToAdd = { ...newBook, id: newId, year: parseInt(newBook.year) }
    setBooks(prev => [...prev, bookToAdd])
    setNewBook({ title: '', author: '', genre: '', year: '' })
  }

  const handleDelete = (id) => {
    setBooks(books.filter(book => book.id !== id))
  }

  const handleEdit = (book) => {
    setNewBook(book)
  }

  const handleSearchChange = (e) => {
    setSearchText(e.target.value)
  }

  const handleGenreChange = (e) => {
    setSelectedGenre(e.target.value)
  }

  const filteredBooks = books.filter(book => {
    const matchTitle = book.title.toLowerCase().includes(searchText.toLowerCase())
    const matchGenre = selectedGenre === "T·∫•t c·∫£" || book.genre === selectedGenre
    return matchTitle && matchGenre
  })

  return (
    <div className="max-w-6xl mx-auto p-6">
      <h1 className="text-3xl font-bold mb-6 text-center text-blue-700">Qu·∫£n l√Ω s√°ch</h1>

      {/* Search & Filter */}
      <div className="mb-6 bg-gray-50 p-4 rounded shadow">
        <h2 className="text-xl font-semibold mb-3">üîç T√¨m ki·∫øm & L·ªçc s√°ch</h2>
        <input
          type="text"
          placeholder="Nh·∫≠p t√™n s√°ch ƒë·ªÉ t√¨m..."
          value={searchText}
          onChange={handleSearchChange}
          className="w-full border p-2 rounded mb-4"
        />
        <div>
          <label className="mr-2 font-medium">Th·ªÉ lo·∫°i:</label>
          <select
            value={selectedGenre}
            onChange={handleGenreChange}
            className="border p-2 rounded"
          >
            <option value="T·∫•t c·∫£">T·∫•t c·∫£</option>
            <option value="VƒÉn h·ªçc">VƒÉn h·ªçc</option>
            <option value="VƒÉn h·ªçc thi·∫øu nhi">VƒÉn h·ªçc thi·∫øu nhi</option>
            <option value="VƒÉn h·ªçc hi·ªán th·ª±c">VƒÉn h·ªçc hi·ªán th·ª±c</option>
            <option value="K·ªπ nƒÉng s·ªëng">K·ªπ nƒÉng s·ªëng</option>
            <option value="T√¢m l√Ω">T√¢m l√Ω</option>
            <option value="Khoa h·ªçc">Khoa h·ªçc</option>
            <option value="C√¥ng ngh·ªá">C√¥ng ngh·ªá</option>
          </select>
        </div>
      </div>

      {/* Add book */}
      <div className="mb-8 bg-white p-4 rounded shadow">
        <h2 className="text-xl font-semibold mb-3">‚ûï Th√™m s√°ch m·ªõi</h2>
        <div className="grid grid-cols-1 sm:grid-cols-4 gap-3 mb-4">
          <input
            type="text"
            name="title"
            placeholder="T√™n s√°ch"
            value={newBook.title}
            onChange={handleChange}
            className="border p-2 rounded"
          />
          <input
            type="text"
            name="author"
            placeholder="T√°c gi·∫£"
            value={newBook.author}
            onChange={handleChange}
            className="border p-2 rounded"
          />
          <input
            type="text"
            name="genre"
            placeholder="Th·ªÉ lo·∫°i"
            value={newBook.genre}
            onChange={handleChange}
            className="border p-2 rounded"
          />
          <input
            type="number"
            name="year"
            placeholder="NƒÉm"
            value={newBook.year}
            onChange={handleChange}
            className="border p-2 rounded"
          />
        </div>
        <button
          onClick={handleAddBook}
          className="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded"
        >
          Th√™m s√°ch
        </button>
      </div>

      {/* Book list */}
      <div className="bg-white p-4 rounded shadow">
        <h2 className="text-xl font-semibold mb-3">üìö Danh s√°ch s√°ch</h2>
        <p className="mb-2 text-gray-600">T·ªïng s·ªë s√°ch: <strong>{filteredBooks.length}</strong></p>

        <div className="overflow-x-auto">
          <table className="w-full text-left border-collapse">
            <thead>
              <tr className="bg-gray-200">
                <th className="p-2">T√™n s√°ch</th>
                <th className="p-2">T√°c gi·∫£</th>
                <th className="p-2">Th·ªÉ lo·∫°i</th>
                <th className="p-2">NƒÉm</th>
                <th className="p-2">H√†nh ƒë·ªông</th>
              </tr>
            </thead>
            <tbody>
              {filteredBooks.map(book => (
                <BookItem
                  key={book.id}
                  book={book}
                  onDelete={handleDelete}
                  onEdit={handleEdit}
                />
              ))}
              {filteredBooks.length === 0 && (
                <tr>
                  <td colSpan="5" className="text-center py-4 text-gray-500">Kh√¥ng t√¨m th·∫•y s√°ch n√†o.</td>
                </tr>
              )}
            </tbody>
          </table>
        </div>
      </div>
    </div>
  )
}

export default BookList
